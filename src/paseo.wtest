import paseo.*
//Se que hay erorr con la referencia zoe, intente hacerlo seteandolo pero el error de referencia sigue estando igual
//Pido de ser posible tener en cuenta el test(no en su totalidad porque no supe resolver el inconveniente) y el codigo 
describe "test de una familia que NO pasea" {

//NOTA: Este fixture está incompleto y sirve para comenzar a testear el examen.
//Es a modo de ayuda, pero no es obligatorio respetar este escenario. 
// Puede modificarse tanto como sea necesario.

	var mediaIzquierdaZoe = new PrendaIzquierda(desgaste = 1,talle=s,quienLoUsa=zoe,abrigoo=0) 
	var mediaDerechaZoe = new PrendaDerecha(desgaste = 3 ,talle=s,quienLoUsa=zoe,abrigoo=0)
	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new PrendasPares(talle=s ,izq=mediaIzquierdaZoe,der=mediaDerechaZoe,quienLoUsa=zoe) 
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapatoIzqZoe= new PrendaIzquierda(desgaste = 0,talle=s,quienLoUsa=zoe,abrigoo=1)
	var zapatoDerZoe= new PrendaDerecha(desgaste = 0,talle=s,quienLoUsa=zoe,abrigoo=1)
	var zapatillasZoe = new PrendasPares(izq=zapatoIzqZoe,der=zapatoDerZoe,talle=s,quienLoUsa=zoe) 
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new RopaPesada(talle=s, abrigoPesado=5,quienLoUsa=zoe) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new RopaLiviana(talle=s,quienLoUsa=zoe) 
	// prenda pesada con desgaste default: 0
	var camperaZoe = new RopaPesada(talle=s,quienLoUsa=zoe) 

	//un juguete para niños de 5 a 100 anios
	var ukelele = new Juguete(min=5, max=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new RopaLiviana(talle=xs, desgaste=5,quienLoUsa=milena) 
	//prenda liviana con desgaste default: 0
	var calzaMilena = new RopaLiviana(talle=xs,quienLoUsa=milena) 

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
    var ojotaIzquierdaMilena = new PrendaIzquierda(desgaste = 1,talle=l,quienLoUsa=milena,abrigoo=2) 
	var ojotaDerechaMilena = new PrendaDerecha(desgaste = 3 ,talle=l,quienLoUsa=milena,abrigoo=3)
    var ojotasMilena = new PrendasPares(talle=l,quienLoUsa=milena,izq=ojotaIzquierdaMilena,der=ojotaDerechaMilena) 
	
	//ninio
	var zoe = new Ninio(talle=s, edad=11, prendas=#{}) 
	//ninio problematico
	var milena = new NinioProblematico(talle=xs, edad=2, prendas = #{}, juguete=ukelele)
	
	//familia	
	var familiaAptaSalir = new Familia(ninios = #{ zoe})

	//familia	
	var familiaNoAptaParaSalir= new Familia(ninios = #{milena, zoe})
	  
	  
	
//PUNTO 1	
	test "comodidad" {
		zoe.nuevaPrenda(mediasZoe)
		zoe.nuevaPrenda(zapatillasZoe)
		zoe.nuevaPrenda(jeanZoe)
		zoe.nuevaPrenda(remeraZoe)
		zoe.nuevaPrenda(camperaZoe)
		
		assert.equals(6 ,mediasZoe.nivelDeComodidad() )
		assert.equals(8 ,zapatillasZoe.nivelDeComodidad())
		assert.equals(8 ,jeanZoe.nivelDeComodidad())
		assert.equals(10 ,remeraZoe.nivelDeComodidad())
		assert.equals(8 ,camperaZoe.nivelDeComodidad())
		assert.equals(7 , remeraMilena.nivelDeComodidad())		
		assert.equals(10 ,calzaMilena.nivelDeComodidad())
		assert.equals(-3 , ojotasMilena.nivelDeComodidad())
	}

//PUNTO 2		
	test "intercambiar pares ok" {
		zoe.nuevaPrenda(mediasZoe)
		zoe.nuevaPrenda(zapatillasZoe)
		zoe.nuevaPrenda(jeanZoe)
		zoe.nuevaPrenda(remeraZoe)
		zoe.nuevaPrenda(camperaZoe)
		var mediaIzq = mediasZoe.izq()
		var mediaDer = mediasZoe.der()
		var zapaIzq = zapatillasZoe.izq()
		var zapaDer = zapatillasZoe.der()
		
		mediasZoe.intercambiar(zapatillasZoe)

		assert.equals(mediaIzq, mediasZoe.izq())
		assert.equals(mediaDer, zapatillasZoe.der())
		assert.equals(zapaIzq, zapatillasZoe.izq())
		assert.equals(zapaDer, mediasZoe.der())
				
	}
	
	test "intercambiar pares no ok" {
			zoe.nuevaPrenda(mediasZoe)
		zoe.nuevaPrenda(zapatillasZoe)
		zoe.nuevaPrenda(jeanZoe)
		zoe.nuevaPrenda(remeraZoe)
		zoe.nuevaPrenda(camperaZoe)
		//Que sucede si intercambio un par de talles distinto?
		//probar el cambio entre las ojotas de milena y las medias de zoe
		//El test está incompleto!
		ojotasMilena.intercambiar(mediasZoe)
		assert.fail("Los talles no son iguales")
	}

//PUNTO 3	
	test "nivel de abrigo" {
			zoe.nuevaPrenda(mediasZoe)
		zoe.nuevaPrenda(zapatillasZoe)
		zoe.nuevaPrenda(jeanZoe)
		zoe.nuevaPrenda(remeraZoe)
		zoe.nuevaPrenda(camperaZoe)
		milena.nuevaPrenda(remeraMilena)
		milena.nuevaPrenda(calzaMilena)
		milena.nuevaPrenda(ojotasMilena)
		
		assert.equals(2 ,mediasZoe.nivelDeAbrigo())
		assert.equals(2 , zapatillasZoe.nivelDeAbrigo())
		assert.equals(5 , jeanZoe.nivelDeAbrigo())
		assert.equals(1 , remeraZoe.nivelDeAbrigo())
		assert.equals(3 ,camperaZoe.nivelDeAbrigo())
		assert.equals(1 ,remeraMilena.nivelDeAbrigo())		
		assert.equals(1 ,calzaMilena.nivelDeAbrigo())
		assert.equals(5 ,ojotasMilena.nivelDeAbrigo())
}

//PUNTO 4		
	test "puede salir de paseo" {
		assert.that(familiaAptaSalir.familiaLista())
		assert.notThat(familiaNoAptaParaSalir.familiaLista())
	}
//PUNTO 5
	
	test "infaltables" {
		assert.equals(#{jeanZoe,calzaMilena}, familiaNoAptaParaSalir.prendasInfaltables())		
	}
	test "chiquitos" {
		assert.equals(#{milena}, familiaNoAptaParaSalir.niniosChiquitos()
		)		
	}
	
//PUNTO 6	
test "salir de paseo ok" {
		familiaAptaSalir.pasear()
		assert.equals(1.8 , mediaIzquierdaZoe.desgaste())
		assert.equals(4.2 , mediaDerechaZoe.desgaste())
		assert.equals(3 , mediasZoe.desgaste())
		assert.equals(1 , zapatillasZoe.desgaste())
		assert.equals(1 , jeanZoe.desgaste())
		assert.equals(1 , remeraZoe.desgaste())
		assert.equals(1 , camperaZoe.desgaste())
		
	}
//PUNTO 7	
	test "salir de paseo no ok" {
		//Que sucede si le pido pasear a una familia que no está lista?
		//El test está incompleto!
		familiaNoAptaParaSalir.pasear()
		assert.fail("No son aptos")
	}
	
	
}